import Head from "next/head";
import { Pagination } from "./components/pagination";
import { CategoryOpt } from "./components/category";
import { BlogCard } from "./components/blogCard";
import { postData } from "./utils/services";
import { useEffect, useState } from "react";
import { SERVER_URL } from "./utils/config";
import { post } from "./types";

export const Home = ({ pageProps }: { pageProps: any }) => {
  const { categories, blogExist } = pageProps.layout;
  const [keyword, setKeyword] = useState("");
  const [categoryId, setCategoryId] = useState(-1);
  const [page, setPage] = useState(-1);
  const [totalNum, setTotalNum] = useState(0);
  const [content, setContent] = useState([]);

  useEffect(() => {
    if (page != -1) onSubmitHandler();
  }, [page, keyword, categoryId]);
  useEffect(() => {
    // if there is blog data in server
    if (blogExist) setPage(1);
  }, [blogExist]);

  const onSubmitHandler = async () => {
    const { result, totalPages, pageNum } = await postData(
      `${SERVER_URL}/api/blog`,
      {
        categoryId,
        keyword,
        page,
      }
    );
    setPage(pageNum);
    setTotalNum(totalPages);
    setContent(result);
  };
  return (
    <>
      <Head>
        <title>Blog</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="py-8">
        <div className="shadow p-5 rounded-lg bg-white mx-auto 2xl:max-w-screen-2xl xl:max-w-screen-xl lg:max-w-screen-lg md:max-w-screen-md sm:max-w-screen-sm">
          <div className="flex flex-row gap-4">
            <CategoryOpt
              categoryList={categories}
              keyword={keyword}
              setKeyword={(e) => {
                setKeyword(e);
              }}
              categoryId={categoryId}
              setCategoryId={(e) => {
                setCategoryId(e);
              }}
            />
          </div>
          <div className="py-6 flex gap-4 lg:flex-row flex-col ">
            {content && page > 0 ? (
              content.map((item: post, key: number) => (
                <BlogCard post={item} key={key} categoryList={categories} />
              ))
            ) : (
              <div className="w-full text-center font-bold text-gray-600">
                no blog to show
              </div>
            )}
          </div>
          <div className="mt-4">
            <Pagination page={page} setPage={setPage} totalPage={totalNum} />
          </div>
        </div>
      </main>
    </>
  );
};

Home.getInitialProps = async () => {
  const res = await postData(`${SERVER_URL}/api/category`);
  return { pageProps: { layout: res } };
};

export default Home;
